"""fresh migration reflecting database changes

Revision ID: 7ed28b115ca1
Revises: 
Create Date: 2025-05-09 14:29:01.120582

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7ed28b115ca1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('achievement', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_achievement_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('bio', sa.String(length=250), nullable=True),
    sa.Column('avatar_url', sa.String(length=200), nullable=True),
    sa.Column('profile_is_public', sa.Boolean(), nullable=False),
    sa.Column('member_since', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('follow',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followee_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followee_id'], ['user.id'], name='fk_follow_followee_id'),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name='fk_follow_follower_id'),
    sa.PrimaryKeyConstraint('follower_id', 'followee_id'),
    sa.UniqueConstraint('follower_id', 'followee_id', name='uq_follower_followee')
    )
    op.create_table('todo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('edit_count', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_todo_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_todo_created_at'), ['created_at'], unique=False)

    op.create_table('user_achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievement.id'], name='fk_userachievement_achievement_id'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_userachievement_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'achievement_id', name='uq_user_achievement')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comment.id'], name='fk_comment_parent_id'),
    sa.ForeignKeyConstraint(['task_id'], ['todo.id'], name='fk_comment_task_id'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_comment_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_created_at'), ['created_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_created_at'))

    op.drop_table('comment')
    op.drop_table('user_achievement')
    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_todo_created_at'))

    op.drop_table('todo')
    op.drop_table('follow')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('achievement', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_achievement_name'))

    op.drop_table('achievement')
    # ### end Alembic commands ###
